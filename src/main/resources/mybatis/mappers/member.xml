<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">
	
	<resultMap type="MemberDTO" id="memberResult">
		<result property="mem_seq.nextval" column="id" />
		<result property="member_id" column="member_id" />
		<result property="member_password" column="member_password" />
		<result property="member_phone" column="member_phone" />
		<result property="member_phone1" column="member_phone" />
		<result property="member_phone2" column="member_phone" />
		<result property="member_name" column="member_name" />
		<result property="member_email" column="member_email" />
		<result property="member_joinDate" column="member_joinDate" />
		<result property="zipno" column="zipno" />
		<result property="roadFullAddr" column="roadFullAddr" />
		<result property="addDetail" column="addDetail" />
	</resultMap>
	
	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="MemberDTO">
		<![CDATA[
		INSERT INTO member
		VALUES(mem_seq.nextval, #{member_id}, #{member_password},#{member_name},#{member_phone}||'-'||#{member_phone1}||'-'||#{member_phone2},  #{member_email},sysdate)
		]]>
	</insert>
	<!-- 회원가입 주소 -->
	<insert id="insertaddress" parameterType="MemberDTO">
		<![CDATA[
		INSERT INTO address
		VALUES(#{member_id}, #{zipno},#{roadFullAddr},#{addDetail})
		]]>
	</insert>
	
	<!-- 아이디 중복 체크 -->
	<select id="idcheck" resultType="int">
		SELECT COUNT(*) FROM member WHERE member_id = #{member_id}
	</select>
	
	<!-- 전화번호 중복 체크 -->
	<select id="phonecheck" resultType="int">
		SELECT COUNT(*) FROM member WHERE member_phone = #{member_phone}
	</select>
	
	<!-- email 중복 체크 -->
	<select id="emailcheck" resultType="int">
		SELECT COUNT(*) FROM member WHERE member_email = #{member_email}
	</select>
	
	<!-- id="loginById" 로 아이디/패스워드를 입력 받아서 MemberDTO를 반환하는 sql 작성 -->
	<select id="loginById" parameterType="MemberDTO" resultType="MemberDTO">
		select * from member where member_id=#{member_id} and
		member_password=#{member_password}
	</select>
	
	<!-- ID 찾기 -->
	<select id="findid" parameterType="MemberDTO" resultType="MemberDTO">
		SELECT MEMBER_ID FROM member WHERE MEMBER_NAME = #{member_name} and
		MEMBER_EMAIL = #{member_email}
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="findpassword" resultType="MemberDTO">
		SELECT
			MEMBER_PASSWORD
		FROM MEMBER
		WHERE MEMBER_NAME = #{member_name}
			AND MEMBER_EMAIL = #{member_email} 
			AND REPLACE(MEMBER_PHONE, '-', '') = #{member_phone}
	</select>
	
	<!-- 회원 리스트 가져오기 -->
	<select id="getMemList" parameterType="MemberDTO" resultType="MemberDTO">
		SELECT * FROM MEMBER WHERE MEMBER_ID != 'admin'
	</select>
	
	<!-- 회원정보 삭제 -->
	<delete id="deleteMember" parameterType="MemberDTO">
		DELETE FROM MEMBER WHERE MEMBER_ID = #{member_id}
	</delete>
	<delete id="delete_member" parameterType="String">
		<![CDATA[
			delete from member where member_id = #{member_id}
		]]>
	</delete>
	
	<!-- 회원정보 수정 -->
	<update id="editMember" parameterType="MemberDTO">
		UPDATE MEMBER SET 
			MEMBER_NAME = #{member_name},
			MEMBER_PASSWORD = #{member_password}, 
			MEMBER_EMAIL = #{member_email},
			MEMBER_PHONE = #{member_phone}||'-'||#{member_phone1}||'-'||#{member_phone2}
		WHERE MEMBER_ID = #{member_id}
	</update>
	
	<!-- 회원정보 주소 수정 -->
	<update id="editAddress" parameterType="MemberDTO">
		UPDATE ADDRESS SET 
			ZIPNO = #{zipno},
			ROADFULLADDR = #{roadFullAddr},
			ADDDETAIL = #{addDetail}
		WHERE MEMBER_ID = #{member_id}
	</update>
	
	<!-- 회원수정 페이지 데이터 -->
	<select id="one_member" resultType="MemberDTO" parameterType="String">
		<![CDATA[
			select m.member_id, member_password, member_name, 
				substr(member_phone,1,3) member_phone, substr(member_phone,5,4) member_phone1, substr(member_phone,10,4) member_phone2, 
				member_email, zipno, roadFulladdr, addDetail
				from member m, address a where m.member_id = a.member_id and m.member_id = #{member_id}
		]]>
	</select>
</mapper>